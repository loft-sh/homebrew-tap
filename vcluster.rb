# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Vcluster < Formula
  desc "Creates fully functional virtual k8s cluster inside host k8s cluster's namespace"
  homepage "https://www.vcluster.com"
  version "0.0.0-ci.3"
  license "Apache-2.0"

  depends_on "helm"
  depends_on "kubernetes-cli"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/loft-sh/vcluster/releases/download/v0.0.0-ci.3/vcluster-cli_Darwin_arm64.tar.gz"
      sha256 "3ade009b5bf82ea7edbd292a24290e439dfb34105e29b7ad4dc9ebbffb74c4a7"

      def install
        bin.install "vcluster"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/loft-sh/vcluster/releases/download/v0.0.0-ci.3/vcluster-cli_Darwin_x86_64.tar.gz"
      sha256 "add4445a6e59bdc5302c6a4bdebf8dceccb9f08c78be30167b20b93c128e4eea"

      def install
        bin.install "vcluster"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/loft-sh/vcluster/releases/download/v0.0.0-ci.3/vcluster-cli_Linux_arm64.tar.gz"
      sha256 "767477e7c0680a7dd93d4aa397c04cbe688d2a84a333817f4ac08b436e90dd17"

      def install
        bin.install "vcluster"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/loft-sh/vcluster/releases/download/v0.0.0-ci.3/vcluster-cli_Linux_x86_64.tar.gz"
      sha256 "e2873ff37d10bff59bee454a14afddcc041a49a2a38646354a92ea2609d6e3ce"

      def install
        bin.install "vcluster"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/loft-sh/vcluster/releases/download/v0.0.0-ci.3/vcluster-cli_Linux_armv6.tar.gz"
      sha256 "55b311a0ad0ec3561a7f555a8616fd07f4f42d8a9d096c76f267f36ccae1ecfd"

      def install
        bin.install "vcluster"
      end
    end
  end

  test do
    help_output = "vcluster root command"
    assert_match help_output, shell_output("#{bin}/vcluster --help")

    create_output = "there is an error loading your current kube config " \
                    "(invalid configuration: no configuration has been provided, " \
                    "try setting KUBERNETES_MASTER environment variable), " \
                    "please make sure you have access to a kubernetes cluster and the command " \
                    "`kubectl get namespaces` is working"
    assert_match create_output, shell_output("#{bin}/vcluster create vcluster -n vcluster --create-namespace", 1)
  end
end
